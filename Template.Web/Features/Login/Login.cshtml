@model Template.Web.Features.Login.LoginViewModel
@{
    ViewData["Title"] = "Login";
}
<div class="container d-flex justify-content-center align-items-center vh-100">
    <div class="card p-4 shadow" style="min-width: 700px; max-width: 800px;">
        <div class="card-body">
            <!-- <h2 class="card-title text-center mb-4">Accedi</h2> -->
            <form method="post" autocomplete="off">
                <input asp-for="ReturnUrl" type="hidden" />
                <div class="mb-3">
                    <label asp-for="Email" class="form-label"></label>
                    <input asp-for="Email" class="form-control" type="text" />
                    <span asp-validation-for="Email" class="text-danger"></span>
                </div>
                <div class="mb-3">
                    <label asp-for="Password" class="form-label"></label>
                    <input asp-for="Password" class="form-control" type="password" />
                    <span asp-validation-for="Password" class="text-danger"></span>
                </div>
                <div class="form-check mb-3">
                    <input asp-for="RememberMe" class="form-check-input" role="switch" />
                    <label asp-for="RememberMe" class="form-check-label">Rimani Connesso</label>
                </div>
                <div class="d-grid">
                    <button type="submit" class="btn btn-primary fs-3">Accedi</button>
                </div>
            </form>
        </div>
    </div>

        <div class="form-group text-center mt-4">
            <button type="submit" class="btn btn-primary">Accedi</button>
        </div>

        @if (ViewData.ModelState.ContainsKey("LoginError"))
        {
            <div class="error-message">
                @Html.ValidationMessage("LoginError")
            </div>
        }
    </form>
</div>