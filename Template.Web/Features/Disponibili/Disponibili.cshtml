@using Template.Web.Features.Disponibili
@model List<Template.Web.Features.Disponibili.DisponibiliViewModel>
@inject Template.Services.Shared.SharedService SharedService

@{
    ViewData["Title"] = "Task Disponibili";
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">

<div class="container mt-4">
    <h2 class="mb-4">Task disponibili</h2>

    @if (Model != null && Model.Any())
    {
        <div class="table-responsive">
            <table class="table table-striped table-bordered">
                <thead class="table-dark">
                    <tr>
                        <th>Descrizione</th>
                        <th>Tipologia</th>
                        <th>Priorità</th>
                        <th>Scadenza</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var task in Model)
                    {
                        <tr>
                            <td>
                                <i class="bi bi-info-circle text-primary me-2"></i>
                                <a href="@Url.Action("Dettagli", "Dettagli", new { id = task.Id })" class="text-decoration-none fw-semibold">
                                    @task.Descrizione
                                </a>
                            </td>
                            <td>
                                <span class="badge bg-@(task.Tipologia == TipologiaEvento.Esterna ? "primary" : "secondary")">
                                    @task.Tipologia
                                </span>
                            </td>
                            <td>
                                @{
                                    var prioritaClass = task.Priorità switch
                                    {
                                        PrioritaEvento.Alta => "danger",
                                        PrioritaEvento.Media => "warning",
                                        _ => "light"
                                    };
                                }
                                <span class="badge text-bg-@prioritaClass fw-semibold">
                                    @task.Priorità
                                </span>
                            </td>
                            <td>
                                @task.Scadenza.ToString()
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <div class="alert alert-warning" role="alert">
            Nessun task trovato.
        </div>
    }
</div>
