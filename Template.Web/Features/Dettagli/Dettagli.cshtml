@model Template.Web.Features.Dettagli.DettagliViewModel

@functions {
    string GetStatoBadgeClass(string stato) => stato switch
    {
        "In Lavorazione" => "bg-warning text-dark",
        "Completato" => "bg-success text-white",
        "Respinto" => "bg-danger text-white",
        _ => "bg-secondary text-white"
    };
    string GetPrioritaBadgeClass(string priorita) => priorita switch
    {
        "Alta" => "text-danger fw-bold",
        "Media" => "text-warning fw-bold",
        "Bassa" => "text-success fw-bold",
        _ => ""
    };
}
@{
    var identitaCorrente = (Template.Web.Areas.IdentitaViewModel)ViewData[Template.Web.Areas.IdentitaViewModel.VIEWDATA_IDENTITACORRENTE_KEY];

    var isResponsabile = false;
    if (identitaCorrente.RuoloUtenteCorrente == "ResponsabileInterno" || identitaCorrente.RuoloUtenteCorrente == "ResponsabileEsterno")
        isResponsabile = true;
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet" />

<div class="container mt-5 mb-5">
    <div class="card shadow-sm">
        <div class="card-body">

            <!-- Alert area -->
            <div id="clientAlert">
                @if (TempData["Success"] != null)
                {
                    <div class="alert alert-success alert-dismissible fade show" role="alert">
                        <i class="bi bi-check-circle-fill me-2"></i>@TempData["Success"]
                        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                    </div>
                }
                else if (TempData["Error"] != null)
                {
                    <div class="alert alert-danger alert-dismissible fade show" role="alert">
                        <i class="bi bi-exclamation-triangle-fill me-2"></i>@TempData["Error"]
                        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                    </div>
                }
            </div>

            <!-- Header -->
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h1 class="card-title">@Model.Titolo</h1>
                <span class="badge px-3 py-2 @GetStatoBadgeClass(Model.Stato)">
                    @Model.Stato
                </span>
            </div>

            <!-- SAVE form -->
            <form id="saveForm"
            asp-controller="Dettagli"
            asp-action="SaveDetails"
            method="post">
                @Html.AntiForgeryToken()
                <input type="hidden" asp-for="TaskId" />
                <input type="hidden" asp-for="IdAssegnatario" />

                <div class="row g-4">
                    <!-- Sidebar -->
                    <div class="col-12 col-md-4">
                        <div class="mb-3">
                            <label class="form-label small text-secondary">Priorità</label>
                            <div class="@GetPrioritaBadgeClass(Model.Priorità)">@Model.Priorità</div>
                        </div>
                        <div class="mb-3">
                            <label class="form-label small text-secondary">Scadenza</label>
                            <div class="bg-secondary text-white px-3 py-2 rounded text-dark fw-semibold" style="max-width: 150px;">
                                @(Model.Scadenza.HasValue ? Model.Scadenza.Value.ToString("dd/MM/yyyy") : "Nessuna")
                            </div>
                        </div>
                        <div class="mb-3">
                            <label class="form-label small text-secondary">Creato il</label>
                            <div class="text-dark fw-semibold">
                                @Model.Creazione.ToString("dd/MM/yyyy HH:mm")
                            </div>
                        </div>
                        <div class="mb-3">
                            <label class="form-label small text-secondary">Creatore</label>
                            <div class="text-dark fw-semibold">@Model.NomeCreatore</div>
                        </div>
                        <div class="mb-3">
                            <label class="form-label small text-secondary">Preso in carico da</label>
                            <div class="text-dark fw-semibold">@Model.NomeAssegnatario</div>
                        </div>
                        <div>
                            <label class="form-label small text-secondary">Tipologia</label>
                            <div class="text-dark fw-semibold">@Model.Tipologia</div>
                        </div>
                    </div>

                    <!-- Main -->
                    <div class="col-12 col-md-8">
                        <div class="mb-3">
                            <label class="form-label small text-secondary">Descrizione</label>
                            @if (Model.IsOwner || isResponsabile)
                            {
                                <textarea asp-for="Descrizione"
                                id="descrizioneInput"
                                data-orig="@Model.Descrizione"
                                class="form-control"
                                rows="5"></textarea>
                            }
                            else
                            {
                                <p class="text-dark fw-semibold">@Model.Descrizione</p>
                            }
                        </div>

                        @if (Model.IsOwner)
                        {
                            <hr />
                            <h5 class="small text-muted">Rendiconto ore lavorate</h5>
                            <div class="row g-3 mb-3">
                                <div class="col-12 col-md-4">
                                    <label class="form-label small text-secondary">Data completamento</label>
                                    <input asp-for="Data"
                                    id="dataInput"
                                    data-orig="@Model.Data.ToString("yyyy-MM-dd")"
                                    type="date"
                                    class="form-control text-dark fw-semibold"
                                    style="max-width: 150px;"
                                    value="@(Model.Data != default ? Model.Data.ToString("yyyy-MM-dd") : "")" />
                                </div>
                                <div class="col-6 col-md-4">
                                    <label class="form-label small text-secondary">Ora inizio</label>
                                    <input asp-for="OraInizio"
                                    id="inizioInput"
                                    data-orig="@Model.OraInizio"
                                    type="number" min="0" max="23"
                                    class="form-control text-dark fw-semibold"
                                    value="@(Model.OraInizio)" />
                                </div>
                                <div class="col-6 col-md-4">
                                    <label class="form-label small text-secondary">Ora fine</label>
                                    <input asp-for="OraFine"
                                    id="fineInput"
                                    data-orig="@Model.OraFine"
                                    type="number" min="0" max="23"
                                    class="form-control text-dark fw-semibold"
                                    value="@(Model.OraFine)" />
                                </div>
                            </div>
                        }
                    </div>
                </div>

                @if (Model.IsOwner)
                {
                    <div class="d-flex justify-content-end gap-2 mt-4">
                        <!-- Salva -->
                        <button type="submit" class="btn btn-success">
                            <i class="bi bi-save me-1"></i> Salva modifiche
                        </button>
                        <!-- Completa -->
                        <button id="completeButton"
                        type="button"
                        class="btn btn-primary">
                            <i class="bi bi-check-circle me-1"></i> Completa Task
                        </button>
                    </div>
                }
                @if (isResponsabile && !Model.IsOwner) {
                    <div class="d-flex justify-content-end gap-2 mt-4">
                        <!-- Salva descrizione responsabile-->
                        <button type="submit" class="btn btn-success">
                            <i class="bi bi-save me-1"></i> Salva descrizione
                        </button>
                    </div>
                }
            </form>
            @if (Model.Stato == "DaFare")
            {
                <div class="d-flex justify-content-end gap-2 mt-4">
                    <form asp-controller="Dettagli"
                          asp-action="PrendiInCarico"
                          method="post"
                          class="mb-4">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="id" value="@Model.TaskId" />
                        <button type="submit" class="btn btn-primary">
                            <i class="bi bi-box-arrow-in-right me-1"></i> Prendi in carico
                        </button>
                    </form>
                </div>
            }
            <!-- Hidden form per completare -->
            <form id="completeForm"
                  asp-controller="Dettagli"
                  asp-action="MarkAsCompleted"
                  method="post" class="d-none">
                @Html.AntiForgeryToken()
                <input type="hidden" name="id" value="@Model.TaskId" />
            </form>

            <!-- Torna indietro -->
            <div class="mt-4">
                <a asp-controller="AreaPersonale"
                   asp-action="AreaPersonale"
                   class="btn btn-outline-secondary">
                    <i class="bi bi-arrow-left me-1"></i> Torna indietro
                </a>
            </div>

        </div>
    </div>
</div>

@section scripts {
    <script>
        function showClientAlert(message, type = 'warning') {
            document.getElementById('clientAlert').innerHTML = `
                <div class="alert alert-${type} alert-dismissible fade show" role="alert">
                    ${message}
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>`;
        }

        document.addEventListener('DOMContentLoaded', () => {
            const btn = document.getElementById('completeButton');
            if (!btn) return;

            btn.addEventListener('click', e => {
                const d = document.getElementById('dataInput').value;
                const i = document.getElementById('inizioInput').value;
                const f = document.getElementById('fineInput').value;
                const od = document.getElementById('dataInput').dataset.orig;
                const oi = document.getElementById('inizioInput').dataset.orig;
                const of = document.getElementById('fineInput').dataset.orig;
                const txt = document.getElementById('descrizioneInput');
                const otxt = txt ? txt.dataset.orig : null;

                if (!d || !i || !f) {
                    showClientAlert("Inserisci prima l'orario di rendiconto.", 'warning');
                    return;
                }
                if ((txt && txt.value !== otxt) ||
                    (d !== od) ||
                    (i !== oi) ||
                    (f !== of)) {
                    showClientAlert("Ci sono modifiche non salvate. Salvale prima di completare il task.", 'warning');
                    return;
                }
                document.getElementById('completeForm').submit();
            });
        });
    </script>
}
